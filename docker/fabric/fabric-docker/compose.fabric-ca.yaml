# Docker Compose Container Infrastructure: Hyperledger Fabric CA
# Generated by Fablo and modified by Rik Janssen
# Do *not* run this file directly (using Docker Compose)! Use the 'fabric-docker.sh' script instead (i.e to generate the key material and other configs).
# See the '.env' file for the variables
version: "3.7"

# One network is used to provide inter-org Fabric communication, for accessing the IPFS APIs, and for exposing the Hyperledger Fabric Gateway(s). This network is created by the IPFS compose file.
networks:
  demo:
    name: ${DEMO_NETWORK_NAME}
    external: True

services:
  ca.orga.fabric.localhost:
    container_name: ca.orga.fabric.localhost
    hostname: ca.orga.fabric.localhost
    image: hyperledger/fabric-ca:${FABRIC_CA_VERSION}
    environment:
      - FABRIC_CA_SERVER_CA_NAME=ca.orga.fabric.localhost
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_CLIENT_HOME=/etc/hyperledger/fabric-ca-client
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_PORT=7054
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
    working_dir: /etc/hyperledger/fabric-ca-server
    command: sh -c 'fabric-ca-server start -b ${ORGA_CA_ADMIN_NAME}:${ORGA_CA_ADMIN_PASSWORD} -d'
    volumes:
      - ../fabric-config/crypto-config/fabric-ca/organizations/orga.fabric.localhost:/etc/hyperledger/fabric-ca-server
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost:/etc/hyperledger/fabric-ca-client
    ports:
      - "${FABRIC_CA_ORGA_HTTP_SOCKET}:7054" # Allow access from remote JupyterLab (SSH tunnel)
    networks:
      - demo

  ca.orgb.fabric.localhost:
    container_name: ca.orgb.fabric.localhost
    hostname: ca.orgb.fabric.localhost
    image: hyperledger/fabric-ca:${FABRIC_CA_VERSION}
    environment:
      - FABRIC_CA_SERVER_CA_NAME=ca.orgb.fabric.localhost
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_CLIENT_HOME=/etc/hyperledger/fabric-ca-client
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_PORT=7054
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
    working_dir: /etc/hyperledger/fabric-ca-server
    command: sh -c 'fabric-ca-server start -b ${ORGB_CA_ADMIN_NAME}:${ORGB_CA_ADMIN_PASSWORD} -d'
    volumes:
      - ../fabric-config/crypto-config/fabric-ca/organizations/orgb.fabric.localhost:/etc/hyperledger/fabric-ca-server
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost:/etc/hyperledger/fabric-ca-client
    networks:
      - demo

  ca.orgc.fabric.localhost:
    container_name: ca.orgc.fabric.localhost
    hostname: ca.orgc.fabric.localhost
    image: hyperledger/fabric-ca:${FABRIC_CA_VERSION}
    environment:
      - FABRIC_CA_SERVER_CA_NAME=ca.orgc.fabric.localhost
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_CLIENT_HOME=/etc/hyperledger/fabric-ca-client
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_PORT=7054
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
    working_dir: /etc/hyperledger/fabric-ca-server
    command: sh -c 'fabric-ca-server start -b ${ORGC_CA_ADMIN_NAME}:${ORGC_CA_ADMIN_PASSWORD} -d'
    volumes:
      - ../fabric-config/crypto-config/fabric-ca/organizations/orgc.fabric.localhost:/etc/hyperledger/fabric-ca-server
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost:/etc/hyperledger/fabric-ca-client
    networks:
      - demo

  ca-client.fabric.localhost:
    build: # Own Node.js image
      context: ./nodejs-image/
      dockerfile: fabric-nodejs.dockerfile
      args:
        NODE_VERSION: "${CA_CLIENT_NODE_VERSION}"
    image: "${COMPOSE_PROJECT_NAME}-nodejs:${CA_CLIENT_NODE_VERSION}-alpine"
    container_name: ca-client.fabric.localhost
    hostname: ca-client.fabric.localhost
    tty: true
    working_dir: /mnt/ca-client-app
    command: /bin/sh
    volumes:
      - ../../../src/fabric/ca-client-app:/mnt/ca-client-app
      - ../fabric-config/crypto-config:/mnt/crypto-config:ro  
      - ../fabric-config/connection-profiles:/mnt/connection-profiles
    networks:
      - demo
