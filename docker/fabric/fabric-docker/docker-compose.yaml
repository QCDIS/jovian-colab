# Docker Compose Container Infrastructure: Hyperledger Fabric
# Generated by Fablo and modified by Rik Janssen
# Do *not* run this file directly (using Docker Compose)! Use the 'fabric-docker.sh' script instead (i.e to generate the key material and other configs).
# See the '.env' file for the variables
version: "3.7"

# One network is used to provide inter-org Fabric communication, for accessing the IPFS APIs, and for exposing the Hyperledger Fabric Gateway(s). This network is created by the IPFS compose file.
networks:
  demo:
    external:
      name: ${DEMO_NETWORK_NAME}

services:
  cc-builder-nodejs-image.fabric.localhost:
    build: # Own Node.js image used for building and running the chaincode
      context: ./nodejs-image/
      dockerfile: fabric-nodejs.dockerfile
      args:
        NODE_VERSION: "${CHAINCODE_NODE_VERSION}"
    image: "${COMPOSE_PROJECT_NAME}-nodejs:${CHAINCODE_NODE_VERSION}-alpine"
    container_name: cc-builder-nodejs-image.fabric.localhost
    command: /bin/true # Placeholder; we only use this container to enforce the image build
    networks:
      - demo

  cli.orga.fabric.localhost:
    container_name: cli.orga.fabric.localhost
    image: hyperledger/fabric-tools:${FABRIC_VERSION}
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      - CORE_PEER_ID=cli.orga.fabric.localhost
      - CORE_CHAINCODE_KEEPALIVE=10
      #
      - CORE_PEER_LOCALMSPID=MSPorgA
      - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/cli/crypto/users/orgadmin@orga.fabric.localhost/msp
      - CORE_PEER_ADDRESS=peer0.orga.fabric.localhost:7021
      # enabled TLS
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/cli/crypto/tlsca/tlsca.orga.fabric.localhost-cert.pem
      - TLS_CA_CERT_PATH=/var/hyperledger/cli/crypto-orderer/tlsca.orga.fabric.localhost-cert.pem
    working_dir: /var/hyperledger/cli/
    command: /bin/bash
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../fabric-docker/scripts/cli:/var/hyperledger/cli/scripts/
      - ../fabric-config/config:/var/hyperledger/cli/config/ # genesis.block and channel.tx's
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost:/var/hyperledger/cli/crypto/
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/tlsca/tlsca.orga.fabric.localhost-cert.pem:/var/hyperledger/cli/crypto-orderer/tlsca.orga.fabric.localhost-cert.pem:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/tlsca/tlsca.orgb.fabric.localhost-cert.pem:/var/hyperledger/cli/crypto-orderer/tlsca.orgb.fabric.localhost-cert.pem:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/tlsca/tlsca.orgc.fabric.localhost-cert.pem:/var/hyperledger/cli/crypto-orderer/tlsca.orgc.fabric.localhost-cert.pem:ro
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/peers/peer0.orga.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer0.orga.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/peers/peer1.orga.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer1.orga.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/peer0.orgb.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer0.orgb.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/peer1.orgb.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer1.orgb.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/peers/peer0.orgc.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer0.orgc.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/peers/peer1.orgc.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer1.orgc.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/chaincode-packages:/var/hyperledger/cli/chaincode-packages/
      - ../../../src/fabric/chaincode/cc-ipfs/:/var/hyperledger/cli/consortium-cc-ipfs/
      - ../../../src/fabric/chaincode/cc-ipfs/:/var/hyperledger/cli/orgb-cc-ipfs/
    networks:
      - demo

  orderer0.consortium.orga.fabric.localhost:
    container_name: orderer0.consortium.orga.fabric.localhost
    image: hyperledger/fabric-orderer:${FABRIC_VERSION}
    environment:
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7030
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=file
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_BOOTSTRAPFILE=/var/hyperledger/config/ConsortiumGenesis.block
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/config/ConsortiumGenesis.block
      - ORDERER_GENERAL_LOCALMSPID=MSPorgA
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=/var/hyperledger/orderer/tls/ca.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=/var/hyperledger/orderer/tls/ca.crt
    working_dir: /var/hyperledger/orderer
    command: orderer
    ports:
      - 127.0.0.1:7030:7030
    volumes:
      - ../fabric-config/config/:/var/hyperledger/config
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/peers/orderer0.consortium.orga.fabric.localhost/msp/:/var/hyperledger/orderer/msp
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/peers/orderer0.consortium.orga.fabric.localhost/tls/:/var/hyperledger/orderer/tls
    networks:
      - demo

  peer0.orga.fabric.localhost:
    container_name: peer0.orga.fabric.localhost
    image: hyperledger/fabric-peer:${FABRIC_VERSION}
    environment:
      - CORE_PEER_LOCALMSPID=MSPorgA
      - CORE_PEER_ID=peer0.orga.fabric.localhost
      - CORE_PEER_ADDRESS=peer0.orga.fabric.localhost:7021
      - CORE_PEER_LISTENADDRESS=peer0.orga.fabric.localhost:7021
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.orga.fabric.localhost:7021
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.orga.fabric.localhost:7021
      - CORE_PEER_GOSSIP_BOOTSTRAP="peer1.orga.fabric.localhost:7022"
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.orga.fabric.localhost:7050
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/peer/msp
      - CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:${FABRIC_CCENV_VERSION}
      - CORE_CHAINCODE_GOLANG_RUNTIME=hyperledger/fabric-baseos:${FABRIC_BASEOS_VERSION}
      - CORE_CHAINCODE_JAVA_RUNTIME=hyperledger/fabric-javaenv:${FABRIC_JAVAENV_VERSION}
      - CORE_CHAINCODE_NODE_RUNTIME=${COMPOSE_PROJECT_NAME}-nodejs:${CHAINCODE_NODE_VERSION}-alpine
      #
      - CORE_CHAINCODE_LOGGING_LEVEL=${LOGGING_LEVEL}
      - CORE_CHAINCODE_LOGGING_SHIM=${LOGGING_LEVEL}
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      #
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${DEMO_NETWORK_NAME}
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # enabled TLS
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/peer/tls/ca.crt
    working_dir: /etc/hyperledger/fabric/peer/
    command: peer node start
    ports:
      - 127.0.0.1:7021:7021
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/peers/peer0.orga.fabric.localhost/msp:/etc/hyperledger/fabric/peer/msp
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/peers/peer0.orga.fabric.localhost/tls:/etc/hyperledger/fabric/peer/tls
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/users:/etc/hyperledger/fabric/peer/msp/users
      - ../fabric-config/config:/etc/hyperledger/fabric/config
    networks:
      - demo

  peer1.orga.fabric.localhost:
    container_name: peer1.orga.fabric.localhost
    image: hyperledger/fabric-peer:${FABRIC_VERSION}
    environment:
      - CORE_PEER_LOCALMSPID=MSPorgA
      - CORE_PEER_ID=peer1.orga.fabric.localhost
      - CORE_PEER_ADDRESS=peer1.orga.fabric.localhost:7022
      - CORE_PEER_LISTENADDRESS=peer1.orga.fabric.localhost:7022
      - CORE_PEER_GOSSIP_ENDPOINT=peer1.orga.fabric.localhost:7022
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.orga.fabric.localhost:7022
      - CORE_PEER_GOSSIP_BOOTSTRAP="peer0.orga.fabric.localhost:7021"
      - CORE_PEER_CHAINCODELISTENADDRESS=peer1.orga.fabric.localhost:7050
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/peer/msp
      - CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:${FABRIC_CCENV_VERSION}
      - CORE_CHAINCODE_GOLANG_RUNTIME=hyperledger/fabric-baseos:${FABRIC_BASEOS_VERSION}
      - CORE_CHAINCODE_JAVA_RUNTIME=hyperledger/fabric-javaenv:${FABRIC_JAVAENV_VERSION}
      - CORE_CHAINCODE_NODE_RUNTIME=${COMPOSE_PROJECT_NAME}-nodejs:${CHAINCODE_NODE_VERSION}-alpine
      #
      - CORE_CHAINCODE_LOGGING_LEVEL=${LOGGING_LEVEL}
      - CORE_CHAINCODE_LOGGING_SHIM=${LOGGING_LEVEL}
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      #
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${DEMO_NETWORK_NAME}
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # enabled TLS
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/peer/tls/ca.crt
    working_dir: /etc/hyperledger/fabric/peer/
    command: peer node start
    ports:
      - 127.0.0.1:7022:7022
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/peers/peer1.orga.fabric.localhost/msp:/etc/hyperledger/fabric/peer/msp
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/peers/peer1.orga.fabric.localhost/tls:/etc/hyperledger/fabric/peer/tls
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/users:/etc/hyperledger/fabric/peer/msp/users
      - ../fabric-config/config:/etc/hyperledger/fabric/config
    networks:
      - demo

  cli.orgb.fabric.localhost:
    container_name: cli.orgb.fabric.localhost
    image: hyperledger/fabric-tools:${FABRIC_VERSION}
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      - CORE_PEER_ID=cli.orgb.fabric.localhost
      - CORE_CHAINCODE_KEEPALIVE=10
      #
      - CORE_PEER_LOCALMSPID=MSPorgB
      - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/cli/crypto/users/orgadmin@orgb.fabric.localhost/msp
      - CORE_PEER_ADDRESS=peer0.orgb.fabric.localhost:7041
      # enabled TLS
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/cli/crypto/tlsca/tlsca.orgb.fabric.localhost-cert.pem
      - TLS_CA_CERT_PATH=/var/hyperledger/cli/crypto-orderer/tlsca.orgb.fabric.localhost-cert.pem
    working_dir: /var/hyperledger/cli/
    command: /bin/bash
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../fabric-docker/scripts/cli:/var/hyperledger/cli/scripts/
      - ../fabric-config/config:/var/hyperledger/cli/config/ # genesis.block and channel.tx's
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost:/var/hyperledger/cli/crypto/
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/tlsca/tlsca.orga.fabric.localhost-cert.pem:/var/hyperledger/cli/crypto-orderer/tlsca.orga.fabric.localhost-cert.pem:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/tlsca/tlsca.orgb.fabric.localhost-cert.pem:/var/hyperledger/cli/crypto-orderer/tlsca.orgb.fabric.localhost-cert.pem:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/tlsca/tlsca.orgc.fabric.localhost-cert.pem:/var/hyperledger/cli/crypto-orderer/tlsca.orgc.fabric.localhost-cert.pem:ro
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/peers/peer0.orga.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer0.orga.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/peers/peer1.orga.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer1.orga.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/peer0.orgb.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer0.orgb.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/peer1.orgb.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer1.orgb.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/peers/peer0.orgc.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer0.orgc.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/peers/peer1.orgc.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer1.orgc.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/chaincode-packages:/var/hyperledger/cli/chaincode-packages/
      - ../../../src/fabric/chaincode/cc-ipfs/:/var/hyperledger/cli/consortium-cc-ipfs/
      - ../../../src/fabric/chaincode/cc-ipfs/:/var/hyperledger/cli/orgb-cc-ipfs/
    networks:
      - demo

  orderer0.consortium.orgb.fabric.localhost:
    container_name: orderer0.consortium.orgb.fabric.localhost
    image: hyperledger/fabric-orderer:${FABRIC_VERSION}
    environment:
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=file
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_BOOTSTRAPFILE=/var/hyperledger/config/ConsortiumGenesis.block
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/config/ConsortiumGenesis.block
      - ORDERER_GENERAL_LOCALMSPID=MSPorgB
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=/var/hyperledger/orderer/tls/ca.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=/var/hyperledger/orderer/tls/ca.crt
    working_dir: /var/hyperledger/orderer
    command: orderer
    ports:
      - 127.0.0.1:7050:7050
    volumes:
      - ../fabric-config/config/:/var/hyperledger/config
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/orderer0.consortium.orgb.fabric.localhost/msp/:/var/hyperledger/orderer/msp
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/orderer0.consortium.orgb.fabric.localhost/tls/:/var/hyperledger/orderer/tls
    networks:
      - demo

  orderer0.orgb.orgb.fabric.localhost:
    container_name: orderer0.orgb.orgb.fabric.localhost
    image: hyperledger/fabric-orderer:${FABRIC_VERSION}
    environment:
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7051
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=file
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_BOOTSTRAPFILE=/var/hyperledger/config/OrgbGenesis.block
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/config/OrgbGenesis.block
      - ORDERER_GENERAL_LOCALMSPID=MSPorgB
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=/var/hyperledger/orderer/tls/ca.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=/var/hyperledger/orderer/tls/ca.crt
    working_dir: /var/hyperledger/orderer
    command: orderer
    ports:
      - 127.0.0.1:7051:7051
    volumes:
      - ../fabric-config/config/:/var/hyperledger/config
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/orderer0.orgb.orgb.fabric.localhost/msp/:/var/hyperledger/orderer/msp
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/orderer0.orgb.orgb.fabric.localhost/tls/:/var/hyperledger/orderer/tls
    networks:
      - demo

  orderer1.orgb.orgb.fabric.localhost:
    container_name: orderer1.orgb.orgb.fabric.localhost
    image: hyperledger/fabric-orderer:${FABRIC_VERSION}
    environment:
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7052
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=file
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_BOOTSTRAPFILE=/var/hyperledger/config/OrgbGenesis.block
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/config/OrgbGenesis.block
      - ORDERER_GENERAL_LOCALMSPID=MSPorgB
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=/var/hyperledger/orderer/tls/ca.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=/var/hyperledger/orderer/tls/ca.crt
    working_dir: /var/hyperledger/orderer
    command: orderer
    ports:
      - 127.0.0.1:7052:7052
    volumes:
      - ../fabric-config/config/:/var/hyperledger/config
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/orderer1.orgb.orgb.fabric.localhost/msp/:/var/hyperledger/orderer/msp
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/orderer1.orgb.orgb.fabric.localhost/tls/:/var/hyperledger/orderer/tls
    networks:
      - demo

  peer0.orgb.fabric.localhost:
    container_name: peer0.orgb.fabric.localhost
    image: hyperledger/fabric-peer:${FABRIC_VERSION}
    environment:
      - CORE_PEER_LOCALMSPID=MSPorgB
      - CORE_PEER_ID=peer0.orgb.fabric.localhost
      - CORE_PEER_ADDRESS=peer0.orgb.fabric.localhost:7041
      - CORE_PEER_LISTENADDRESS=peer0.orgb.fabric.localhost:7041
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.orgb.fabric.localhost:7041
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.orgb.fabric.localhost:7041
      - CORE_PEER_GOSSIP_BOOTSTRAP="peer1.orgb.fabric.localhost:7042"
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.orgb.fabric.localhost:7050
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/peer/msp
      - CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:${FABRIC_CCENV_VERSION}
      - CORE_CHAINCODE_GOLANG_RUNTIME=hyperledger/fabric-baseos:${FABRIC_BASEOS_VERSION}
      - CORE_CHAINCODE_JAVA_RUNTIME=hyperledger/fabric-javaenv:${FABRIC_JAVAENV_VERSION}
      - CORE_CHAINCODE_NODE_RUNTIME=${COMPOSE_PROJECT_NAME}-nodejs:${CHAINCODE_NODE_VERSION}-alpine
      #
      - CORE_CHAINCODE_LOGGING_LEVEL=${LOGGING_LEVEL}
      - CORE_CHAINCODE_LOGGING_SHIM=${LOGGING_LEVEL}
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      #
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${DEMO_NETWORK_NAME}
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # enabled TLS
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/peer/tls/ca.crt
    working_dir: /etc/hyperledger/fabric/peer/
    command: peer node start
    ports:
      - 127.0.0.1:7041:7041
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/peer0.orgb.fabric.localhost/msp:/etc/hyperledger/fabric/peer/msp
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/peer0.orgb.fabric.localhost/tls:/etc/hyperledger/fabric/peer/tls
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/users:/etc/hyperledger/fabric/peer/msp/users
      - ../fabric-config/config:/etc/hyperledger/fabric/config
    networks:
      - demo

  peer1.orgb.fabric.localhost:
    container_name: peer1.orgb.fabric.localhost
    image: hyperledger/fabric-peer:${FABRIC_VERSION}
    environment:
      - CORE_PEER_LOCALMSPID=MSPorgB
      - CORE_PEER_ID=peer1.orgb.fabric.localhost
      - CORE_PEER_ADDRESS=peer1.orgb.fabric.localhost:7042
      - CORE_PEER_LISTENADDRESS=peer1.orgb.fabric.localhost:7042
      - CORE_PEER_GOSSIP_ENDPOINT=peer1.orgb.fabric.localhost:7042
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.orgb.fabric.localhost:7042
      - CORE_PEER_GOSSIP_BOOTSTRAP="peer0.orgb.fabric.localhost:7041"
      - CORE_PEER_CHAINCODELISTENADDRESS=peer1.orgb.fabric.localhost:7050
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/peer/msp
      - CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:${FABRIC_CCENV_VERSION}
      - CORE_CHAINCODE_GOLANG_RUNTIME=hyperledger/fabric-baseos:${FABRIC_BASEOS_VERSION}
      - CORE_CHAINCODE_JAVA_RUNTIME=hyperledger/fabric-javaenv:${FABRIC_JAVAENV_VERSION}
      - CORE_CHAINCODE_NODE_RUNTIME=${COMPOSE_PROJECT_NAME}-nodejs:${CHAINCODE_NODE_VERSION}-alpine
      #
      - CORE_CHAINCODE_LOGGING_LEVEL=${LOGGING_LEVEL}
      - CORE_CHAINCODE_LOGGING_SHIM=${LOGGING_LEVEL}
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      #
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${DEMO_NETWORK_NAME}
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # enabled TLS
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/peer/tls/ca.crt
    working_dir: /etc/hyperledger/fabric/peer/
    command: peer node start
    ports:
      - 127.0.0.1:7042:7042
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/peer1.orgb.fabric.localhost/msp:/etc/hyperledger/fabric/peer/msp
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/peer1.orgb.fabric.localhost/tls:/etc/hyperledger/fabric/peer/tls
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/users:/etc/hyperledger/fabric/peer/msp/users
      - ../fabric-config/config:/etc/hyperledger/fabric/config
    networks:
      - demo

  cli.orgc.fabric.localhost:
    container_name: cli.orgc.fabric.localhost
    image: hyperledger/fabric-tools:${FABRIC_VERSION}
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      - CORE_PEER_ID=cli.orgc.fabric.localhost
      - CORE_CHAINCODE_KEEPALIVE=10
      #
      - CORE_PEER_LOCALMSPID=MSPorgC
      - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/cli/crypto/users/orgadmin@orgc.fabric.localhost/msp
      - CORE_PEER_ADDRESS=peer0.orgc.fabric.localhost:7061
      # enabled TLS
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/cli/crypto/tlsca/tlsca.orgc.fabric.localhost-cert.pem
      - TLS_CA_CERT_PATH=/var/hyperledger/cli/crypto-orderer/tlsca.orgc.fabric.localhost-cert.pem
    working_dir: /var/hyperledger/cli/
    command: /bin/bash
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../fabric-docker/scripts/cli:/var/hyperledger/cli/scripts/
      - ../fabric-config/config:/var/hyperledger/cli/config/ # genesis.block and channel.tx's
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost:/var/hyperledger/cli/crypto/
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/tlsca/tlsca.orga.fabric.localhost-cert.pem:/var/hyperledger/cli/crypto-orderer/tlsca.orga.fabric.localhost-cert.pem:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/tlsca/tlsca.orgb.fabric.localhost-cert.pem:/var/hyperledger/cli/crypto-orderer/tlsca.orgb.fabric.localhost-cert.pem:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/tlsca/tlsca.orgc.fabric.localhost-cert.pem:/var/hyperledger/cli/crypto-orderer/tlsca.orgc.fabric.localhost-cert.pem:ro
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/peers/peer0.orga.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer0.orga.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/crypto-config/peerOrganizations/orga.fabric.localhost/peers/peer1.orga.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer1.orga.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/peer0.orgb.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer0.orgb.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgb.fabric.localhost/peers/peer1.orgb.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer1.orgb.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/peers/peer0.orgc.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer0.orgc.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/peers/peer1.orgc.fabric.localhost/tls/ca.crt:/var/hyperledger/cli/crypto-peer/peer1.orgc.fabric.localhost/tls/ca.crt:ro
      - ../fabric-config/chaincode-packages:/var/hyperledger/cli/chaincode-packages/
      - ../../../src/fabric/chaincode/cc-ipfs/:/var/hyperledger/cli/consortium-cc-ipfs/
      - ../../../src/fabric/chaincode/cc-ipfs/:/var/hyperledger/cli/orgb-cc-ipfs/
    networks:
      - demo

  orderer0.consortium.orgc.fabric.localhost:
    container_name: orderer0.consortium.orgc.fabric.localhost
    image: hyperledger/fabric-orderer:${FABRIC_VERSION}
    environment:
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7070
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=file
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_BOOTSTRAPFILE=/var/hyperledger/config/ConsortiumGenesis.block
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/config/ConsortiumGenesis.block
      - ORDERER_GENERAL_LOCALMSPID=MSPorgC
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=/var/hyperledger/orderer/tls/ca.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=/var/hyperledger/orderer/tls/ca.crt
    working_dir: /var/hyperledger/orderer
    command: orderer
    ports:
      - 127.0.0.1:7070:7070
    volumes:
      - ../fabric-config/config/:/var/hyperledger/config
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/peers/orderer0.consortium.orgc.fabric.localhost/msp/:/var/hyperledger/orderer/msp
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/peers/orderer0.consortium.orgc.fabric.localhost/tls/:/var/hyperledger/orderer/tls
    networks:
      - demo

  peer0.orgc.fabric.localhost:
    container_name: peer0.orgc.fabric.localhost
    image: hyperledger/fabric-peer:${FABRIC_VERSION}
    environment:
      - CORE_PEER_LOCALMSPID=MSPorgC
      - CORE_PEER_ID=peer0.orgc.fabric.localhost
      - CORE_PEER_ADDRESS=peer0.orgc.fabric.localhost:7061
      - CORE_PEER_LISTENADDRESS=peer0.orgc.fabric.localhost:7061
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.orgc.fabric.localhost:7061
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.orgc.fabric.localhost:7061
      - CORE_PEER_GOSSIP_BOOTSTRAP="peer1.orgc.fabric.localhost:7062"
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.orgc.fabric.localhost:7050
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/peer/msp
      - CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:${FABRIC_CCENV_VERSION}
      - CORE_CHAINCODE_GOLANG_RUNTIME=hyperledger/fabric-baseos:${FABRIC_BASEOS_VERSION}
      - CORE_CHAINCODE_JAVA_RUNTIME=hyperledger/fabric-javaenv:${FABRIC_JAVAENV_VERSION}
      - CORE_CHAINCODE_NODE_RUNTIME=${COMPOSE_PROJECT_NAME}-nodejs:${CHAINCODE_NODE_VERSION}-alpine
      #
      - CORE_CHAINCODE_LOGGING_LEVEL=${LOGGING_LEVEL}
      - CORE_CHAINCODE_LOGGING_SHIM=${LOGGING_LEVEL}
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      #
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${DEMO_NETWORK_NAME}
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # enabled TLS
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/peer/tls/ca.crt
    working_dir: /etc/hyperledger/fabric/peer/
    command: peer node start
    ports:
      - 127.0.0.1:7061:7061
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/peers/peer0.orgc.fabric.localhost/msp:/etc/hyperledger/fabric/peer/msp
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/peers/peer0.orgc.fabric.localhost/tls:/etc/hyperledger/fabric/peer/tls
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/users:/etc/hyperledger/fabric/peer/msp/users
      - ../fabric-config/config:/etc/hyperledger/fabric/config
    networks:
      - demo

  peer1.orgc.fabric.localhost:
    container_name: peer1.orgc.fabric.localhost
    image: hyperledger/fabric-peer:${FABRIC_VERSION}
    environment:
      - CORE_PEER_LOCALMSPID=MSPorgC
      - CORE_PEER_ID=peer1.orgc.fabric.localhost
      - CORE_PEER_ADDRESS=peer1.orgc.fabric.localhost:7062
      - CORE_PEER_LISTENADDRESS=peer1.orgc.fabric.localhost:7062
      - CORE_PEER_GOSSIP_ENDPOINT=peer1.orgc.fabric.localhost:7062
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.orgc.fabric.localhost:7062
      - CORE_PEER_GOSSIP_BOOTSTRAP="peer0.orgc.fabric.localhost:7061"
      - CORE_PEER_CHAINCODELISTENADDRESS=peer1.orgc.fabric.localhost:7050
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/peer/msp
      - CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:${FABRIC_CCENV_VERSION}
      - CORE_CHAINCODE_GOLANG_RUNTIME=hyperledger/fabric-baseos:${FABRIC_BASEOS_VERSION}
      - CORE_CHAINCODE_JAVA_RUNTIME=hyperledger/fabric-javaenv:${FABRIC_JAVAENV_VERSION}
      - CORE_CHAINCODE_NODE_RUNTIME=${COMPOSE_PROJECT_NAME}-nodejs:${CHAINCODE_NODE_VERSION}-alpine
      #
      - CORE_CHAINCODE_LOGGING_LEVEL=${LOGGING_LEVEL}
      - CORE_CHAINCODE_LOGGING_SHIM=${LOGGING_LEVEL}
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      #
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${DEMO_NETWORK_NAME}
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # enabled TLS
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/peer/tls/ca.crt
    working_dir: /etc/hyperledger/fabric/peer/
    command: peer node start
    ports:
      - 127.0.0.1:7062:7062
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/peers/peer1.orgc.fabric.localhost/msp:/etc/hyperledger/fabric/peer/msp
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/peers/peer1.orgc.fabric.localhost/tls:/etc/hyperledger/fabric/peer/tls
      - ../fabric-config/crypto-config/peerOrganizations/orgc.fabric.localhost/users:/etc/hyperledger/fabric/peer/msp/users
      - ../fabric-config/config:/etc/hyperledger/fabric/config
    networks:
      - demo

  db.explorer.fabric.localhost:
    image: hyperledger/explorer-db:${HYPERLEDGER_EXPLORER_VERSION}
    container_name: db.explorer.fabric.localhost
    environment:
      - DATABASE_DATABASE=fabricexplorer
      - DATABASE_USERNAME=hppoc
      - DATABASE_PASSWORD=password
      - LOGSPOUT=ignore
    healthcheck:
      test: "pg_isready -h localhost -p 5432 -q -U postgres"
      interval: 5s
      timeout: 10s
      retries: 7
    volumes:
      - /var/lib/postgresql/data
    networks:
      - demo

  explorer.fabric.localhost:
    image: hyperledger/explorer:${HYPERLEDGER_EXPLORER_VERSION}
    restart: on-failure:8
    container_name: explorer.fabric.localhost
    environment:
      - DATABASE_HOST=db.explorer.fabric.localhost
      - DATABASE_DATABASE=fabricexplorer
      - DATABASE_USERNAME=hppoc
      - DATABASE_PASSWD=password
      - LOG_LEVEL_APP=debug
      - LOG_LEVEL_DB=debug
      - LOG_LEVEL_CONSOLE=info
      - LOG_CONSOLE_STDOUT=true
      - DISCOVERY_AS_LOCALHOST=false
      - LOGSPOUT=ignore
    volumes:
      - ../fabric-config/explorer/config-global.json:/opt/explorer/app/platform/fabric/config.json
      - ../fabric-config/explorer:/opt/explorer/app/platform/fabric/connection-profile
      - ../fabric-config/crypto-config:/tmp/crypto
    ports:
      - "127.0.0.1:7010:8080"
    depends_on:
      db.explorer.fabric.localhost:
        condition: service_healthy
    networks:
      - demo
